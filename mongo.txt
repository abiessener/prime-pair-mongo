//Create a collection named orders.

  use prime-mongo-pair;
  db.createCollection('orders');

//Insert at least 3 documents that represent orders. IMPORTANT: See section below for fields. 
//Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02

  db.orders.insert({ orderDate: new Date("2017-02-03"), orderTotal: 170.54, lineItems: [ { unitPrice: 14.99, quantity: 2, productName: "Notebooks" } ] });
  
  db.orders.insert({ orderDate: new Date("2017-04-04"), orderTotal: 69.32, lineItems: [ { unitPrice: 30.11, quantity: 2, productName: "Giant Rabbit Plushies" }, { unitPrice: 1.22, quantity: 2, productName: "Railroad Spikes" } ] });

  db.orders.insert({ orderDate: new Date("2017-01-02"), orderTotal: 573.00, lineItems: [ { unitPrice: 86.13, quantity: 1, productName: "Dilithium Crystal" }, {unitPrice: 192.13, quantity: 3, productName: "Photon Torpedoes"}, { unitPrice: 24.00, quantity: 10, productName: "Blue Body Paint" } ] });


//Find all orders and make them look pretty.

  db.orders.find().pretty();

//Find all orders with an orderDate that is after 1/31/2017.

  db.orders.find({'orderDate' : { $gt : new Date("2017-31-01")}});

//Change the orderTotal from 2/3/2017 to 63 dollars (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)

  db.orders.update({_id: ObjectId("599ef9661a1122e23ee45ec4")}, {$set: {'orderTotal': 63}});

//Add another lineItem to the order from 4/4/2017

  db.orders.update({_id: ObjectId("599ef96d1a1122e23ee45ec5")}, {$push: {'lineItems': { unitPrice: 3.01, quantity: 72, productName: "Bath Salts" } } });

//Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's

  db.orders.update({_id: ObjectId("599ef9721a1122e23ee45ec6")}, {$set: {'lineItems.0.productName': 'transistor radios'}});

  db.orders.update({_id: ObjectId("599ef9721a1122e23ee45ec6")}, {$set: {'lineItems.0.quantity': 2}});

//Find orders with lineItems that have a quantity that is less than 10, but greater than 2. You will have to research $and

// this was interesting. getting into the array was a lot trickier; i ended up writing this on Kris's suggestion to get a search functioning at all
//db.orders.find(
//  {
//  'orderTotal': { $gt : 0 },
//  'orderTotal': { $lt : 100 } 
//  }).pretty();

// this is the actual answer
db.orders.find({"lineItems": { $elemMatch: { quantity: {$gt:8, $lt:14 }}}}).pretty()  